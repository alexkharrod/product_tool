"""Convert to tiered pricing model with 1-5 tiers

Revision ID: a56da157fd36
Revises: 2127cec5aaab
Create Date: 2025-01-23 15:50:30.742718

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy import inspect


# revision identifiers, used by Alembic.
revision = 'a56da157fd36'
down_revision = '2127cec5aaab'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    conn = op.get_bind()
    inspector = inspect(conn)
    
    if not inspector.has_table('quote_tiers'):
        op.create_table('quote_tiers',
            sa.Column('id', sa.Integer(), nullable=False),
            sa.Column('quote_id', sa.Integer(), nullable=False),
            sa.Column('tier_number', sa.Integer(), nullable=False),
            sa.Column('quantity', sa.Integer(), nullable=False),
            sa.Column('air_freight', sa.Float(), nullable=True),
            sa.Column('ocean_freight', sa.Float(), nullable=True),
            sa.Column('markup', sa.Float(), nullable=True),
            sa.Column('quote_price', sa.Float(), nullable=False),
            sa.ForeignKeyConstraint(['quote_id'], ['quotes.id']),
            sa.PrimaryKeyConstraint('id'),
            sa.CheckConstraint('quantity > 0', name='check_positive_quantity'),
            sa.CheckConstraint('quote_price > 0', name='check_positive_price'),
            sa.CheckConstraint('tier_number BETWEEN 1 AND 5', name='check_tier_number_range')
        )
    with op.batch_alter_table('quotes', schema=None) as batch_op:
        # Remove constraints first
        batch_op.drop_constraint('check_quantity_order_1_2', type_='check')
        batch_op.drop_constraint('check_quantity_order_2_3', type_='check')
        
        # Then drop columns
        batch_op.drop_column('air_freight1')
        batch_op.drop_column('air_freight3')
        batch_op.drop_column('ocean_freight2')
        batch_op.drop_column('markup3')
        batch_op.drop_column('quote_price3')
        batch_op.drop_column('ocean_freight3')
        batch_op.drop_column('quote_price1')
        batch_op.drop_column('quantity2')
        batch_op.drop_column('quote_price2')
        batch_op.drop_column('ocean_freight1')
        batch_op.drop_column('markup2')
        batch_op.drop_column('air_freight2')
        batch_op.drop_column('quantity1')
        batch_op.drop_column('quantity3')
        batch_op.drop_column('markup1')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('quotes', schema=None) as batch_op:
        batch_op.add_column(sa.Column('markup1', sa.FLOAT(), nullable=True))
        batch_op.add_column(sa.Column('quantity3', sa.INTEGER(), nullable=True))
        batch_op.add_column(sa.Column('quantity1', sa.INTEGER(), nullable=False))
        batch_op.add_column(sa.Column('air_freight2', sa.FLOAT(), nullable=True))
        batch_op.add_column(sa.Column('markup2', sa.FLOAT(), nullable=True))
        batch_op.add_column(sa.Column('ocean_freight1', sa.FLOAT(), nullable=True))
        batch_op.add_column(sa.Column('quote_price2', sa.FLOAT(), nullable=True))
        batch_op.add_column(sa.Column('quantity2', sa.INTEGER(), nullable=True))
        batch_op.add_column(sa.Column('quote_price1', sa.FLOAT(), nullable=False))
        batch_op.add_column(sa.Column('ocean_freight3', sa.FLOAT(), nullable=True))
        batch_op.add_column(sa.Column('quote_price3', sa.FLOAT(), nullable=True))
        batch_op.add_column(sa.Column('markup3', sa.FLOAT(), nullable=True))
        batch_op.add_column(sa.Column('ocean_freight2', sa.FLOAT(), nullable=True))
        batch_op.add_column(sa.Column('air_freight3', sa.FLOAT(), nullable=True))
        batch_op.add_column(sa.Column('air_freight1', sa.FLOAT(), nullable=True))

    op.drop_table('quote_tiers')
    # ### end Alembic commands ###
